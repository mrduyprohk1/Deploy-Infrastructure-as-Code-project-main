Description: CD12352 - Infrastructure as Code Project - Udagram

Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  EBSVolumeSize:
    Description: The EBS volume size attached to an EC2 instance. 
    Type: Number

  MinEC2Servers:
    Description: Please set the minimum number of server/ec2 instances
    Type: Number
    Default: 4

  MaxEC2Servers:
    Description: Please set the maximum number of server/ec2 instances
    Type: Number
    Default: 10 
  KeyPairName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

Resources:

  EC2ReadOnlyS3Role:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: "/"

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref EC2ReadOnlyS3Role


  LoadBalanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP to our load balancer
      VpcId: 
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0


  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP to our hosts and SSH
      VpcId: 
        Fn::ImportValue: 
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: 
          Ref: LoadBalanceSecurityGroup  # Only allow HTTP from the LoadBalancer
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0  # Allow SSH for maintenance (if needed, otherwise restrict further)
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0


  WebAppLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        KeyName: !Ref KeyPairName  # Add the KeyPairName here
        UserData: 
          Fn::Base64: !Sub |
            #!/bin/bash
            apt-get update -y
            apt-get install unzip awscli -y
            apt-get install apache2 -y
            systemctl start apache2.service
            cd /var/www/html
            sudo rm index.html
            sudo aws s3 cp s3://udacity-demo-1/udacity.zip .
            sudo unzip -o udacity.zip
            systemctl start apache2.service
        ImageId: ami-08fdec01f5df9998f
        IamInstanceProfile:
          Name: !Ref EC2InstanceProfile
        SecurityGroupIds:
          - !Ref WebServerSecGroup
        InstanceType: t3.medium
        BlockDeviceMappings:
          - DeviceName: "/dev/sdk"
            Ebs:
              VolumeSize: !Ref EBSVolumeSize

  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MinSize: !Ref MinEC2Servers
      MaxSize: !Ref MaxEC2Servers
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PRIVATE-SUBNETS"
      LaunchTemplate:
        LaunchTemplateId: !Ref WebAppLaunchTemplate
        Version: !GetAtt WebAppLaunchTemplate.LatestVersionNumber
      HealthCheckGracePeriod: 60
      HealthCheckType: ELB
      TargetGroupARNs:
        - Ref: WebAppTargetGroup

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"

  WebAppLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUBLIC1-SUBNET"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUBLIC2-SUBNET"
      SecurityGroups:
        - Ref: LoadBalanceSecurityGroup
        
  LBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebAppTargetGroup
      LoadBalancerArn: !Ref WebAppLoadBalancer
      Port: 80
      Protocol: HTTP

  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref WebAppTargetGroup
      Conditions:
        - Field: path-pattern
          Values: ["/"]
      ListenerArn: !Ref LBListener
      Priority: 1

Outputs:
  LoadBalancerEndpoint:
    Description: Public Endpoint by Load Balancer
    Value: !Join [ "", [ 'http://', !GetAtt WebAppLoadBalancer.DNSName ]]
    Export:
      Name: !Sub ${EnvironmentName}-LB-URL
